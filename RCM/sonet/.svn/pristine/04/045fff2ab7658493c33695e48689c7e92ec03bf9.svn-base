package pt.ist.sonet.domain;

import pt.ist.sonet.service.dto.PublicationViewDto;
import pt.ist.sonet.service.dto.PublicationWithPriceViewDto;

/**
 * 
 * Classe Content que herda de Content_Base
 * 
 */
public class Content extends Content_Base {

	private static String CONTENT = "Content";
	
	/**
	 * Construtor
	 */
	public Content() {
		super();
	}

	/**
	 * Construtor
	 * 
	 * @param int id - identificador desta publicacao
	 * @param String label - legenda da publicacao
	 * @param int pos - numero de votos positivos da publicacao
	 * @param int neg - numero de votos negativos da publicacao
	 * @param Agent creator - agente que faz a publicacao
	 * @param String url - conteudo da publicacao
	 */
	public  Content(int id, String label, int pos, int neg, Agent creator, String url, int price) {
		super();
		init(id, label, pos, neg, creator);
		setURL(url);
		setPrice(price);
	}

	/**
	 * 
	 * Metodo que lista a publicacao
	 * 
	 * @return uma string com o id da publicacao, o nome do agente que a fez, a legenda, o conteudo da publicacao
	 * e o seu numero de votos positivos e negativos
	 */
	public String toString() {
		return this.getId() + " | " + this.getAgent().getName() + " | " + this.getLabel() + " | " + this.getURL() + " | â‚¬"+ this.getPrice() + " | " + this.getPosVotes() + " | "+ this.getNegVotes() ;
	}
	
	/**
	 * Metodo que devolve uma string que indica qual o tipo de publicacao
	 * 
	 * @return String
	 */
	public String getType(){
		return CONTENT;
	}
	
	/**
	 * Metodo usado para criar um DTO do tipo PublicationWithPriceViewDto. Permite a nao utilizacao
	 * do metodo getType.
	 * 
	 *  @return PublicationViewDto
	 */
	@Override
	public PublicationViewDto createDto() {
		return new PublicationWithPriceViewDto(this.getId(), this.getType(), this.getAgent().getUsername(), this.getLabel(), this.getURL(), this.getPosVotes(), this.getNegVotes(), this.getCommentsCount(), this.getPrice());
	}
	
}