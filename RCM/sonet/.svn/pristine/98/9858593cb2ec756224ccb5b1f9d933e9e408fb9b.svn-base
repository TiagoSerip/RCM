package pt.ist.sonet.service;

import java.util.ArrayList;

import pt.ist.fenixframework.pstm.Transaction;
import pt.ist.sonet.domain.Publication;
import pt.ist.sonet.exception.AgentUsernameDoesNotExistsException;
import pt.ist.sonet.exception.OnVoteLimitException;
import pt.ist.sonet.exception.PublicationIdDoesNotExistsException;
import pt.ist.sonet.exception.SoNetException;
import pt.ist.sonet.exception.YouArentAFriendException;
import pt.ist.sonet.service.dto.PublicationViewDto;
import pt.ist.sonet.service.dto.StringListDto;

public class VotePublicationTestCase extends SonetServiceTestCase {


	private static String ORGANIZATIONAL = "Organizational";
	private static String INDIVIDUAL = "Individual";
	private static String IA1 = "Manel Camarinha";
	private static String IA1U="Mane";
	private static String IA1E="manecama@mm.pt";
	private static String IA1P="123mane";
	private static String IA2 = "Fafa de Belem";
	private static String IA2U="fafa";
	private static String IA2E="fafa@brasil.pt";
	private static String IA2P="123fafa";
	private static String IA3 = "Rita Joana";
	private static String IA3U="rija";
	private static String IA3E="rija@brasil.pt";
	private static String IA3P="123rija";
	private static String IA4 = "Joana Jo√£o";
	private static String IA4U="jojo";
	private static String IA4E="jojo@brasil.pt";
	private static String IA4P="123jojo";
	private static String IA5 = "Maria Rosalina";
	private static String IA5U="maro";
	private static String IA5E="maro@brasil.pt";
	private static String IA5P="123maro";
	private static String INDIVIDUAL_AGENT = "Zeze Camarinha";
	private static String INDIVIDUAL_AGENT_USER = "zeze";
	private static String INDIVIDUAL_AGENT_EMAIL = "camarinha@mail.pt";
	private static String INDIVIDUAL_AGENT_PASS = "123camarinha";
	private static String ORGANIZATIONAL_AGENT = "Kikas";
	private static String ORGANIZATIONAL_AGENT_USER = "kikas";
	private static String ORGANIZATIONAL_AGENT_EMAIL = "kikas_organization@mail.pt";
	private static String ORGANIZATIONAL_AGENT_PASS = "kikasorg1";
	private static String INDIVIDUAL_AGENT_2 = "Osvaldo Costa";
	private static String INDIVIDUAL_AGENT_2_USER = "osvaldo";
	private static String INDIVIDUAL_AGENT_2_EMAIL = "osvaldocosta@mail.pt";
	private static String INDIVIDUAL_AGENT_2_PASS = "osvaldopassword";
	private static String CITY = "LISBOA";
	private static String COUNTRY = "PORTUGAL";
	private static String PERMISSION = "amigo";
	private static String PERMISSIONORG = "publica";
	private static String TEXT = "Bem-vindos a Kikas";
	private static String TEXT_2 = "Temos novos descontos!!";
	private static String TEXT_3 = "Agora leve 2 produtos e paga apenas 1";
	private static String TEXT_4 = "trovao";
	private static String LABEL = "Bem-vindos";
	private static String LABEL_2 = "Descontos";
	private static String LABEL_3 = "leve 2 pague 1";
	private static String LABEL_4 = "Muito muito mais";
	private static String COMMENT_TEST = "Muito bom";

	public VotePublicationTestCase() {
		super();
	}

	public VotePublicationTestCase(String msg) {
		super(msg);
	}

	@Override
	public void setUp() {
		super.setUp();
		try {
			addAgent(ORGANIZATIONAL, ORGANIZATIONAL_AGENT_USER,
					ORGANIZATIONAL_AGENT, ORGANIZATIONAL_AGENT_EMAIL,
					ORGANIZATIONAL_AGENT_PASS, CITY, COUNTRY, PERMISSIONORG);

			addAgent(INDIVIDUAL, INDIVIDUAL_AGENT_USER, INDIVIDUAL_AGENT,
					INDIVIDUAL_AGENT_EMAIL, INDIVIDUAL_AGENT_PASS, CITY,
					COUNTRY, PERMISSION);

			addAgent(INDIVIDUAL, INDIVIDUAL_AGENT_2_USER, INDIVIDUAL_AGENT_2,
					INDIVIDUAL_AGENT_2_EMAIL, INDIVIDUAL_AGENT_2_PASS, CITY,
					COUNTRY, PERMISSION);

			addAgent(INDIVIDUAL, IA1U, IA1,
					IA1E, IA1P, CITY,
					COUNTRY, PERMISSIONORG);
			
			addAgent(INDIVIDUAL, IA2U, IA2,
					IA2E, IA2P, CITY,
					COUNTRY, PERMISSIONORG);
			
			addAgent(INDIVIDUAL, IA3U, IA3,
					IA3E, IA3P, CITY,
					COUNTRY, PERMISSIONORG);
			addAgent(INDIVIDUAL, IA4U, IA4,
					IA4E, IA4P, CITY,
					COUNTRY, PERMISSIONORG);
			addAgent(INDIVIDUAL, IA5U, IA5,
					IA5E, IA5P, CITY,
					COUNTRY, PERMISSIONORG);
			
			addFriend(INDIVIDUAL_AGENT_USER, INDIVIDUAL_AGENT_2_USER);

			addNote(TEXT, ORGANIZATIONAL_AGENT_USER, LABEL);

			addNote(TEXT_2, ORGANIZATIONAL_AGENT_USER, LABEL_2);

			addNote(TEXT_3, ORGANIZATIONAL_AGENT_USER, LABEL_3);

			addNote(TEXT_4, INDIVIDUAL_AGENT_2_USER, LABEL_4);

		}

		catch (SoNetException e) {
		}
	}
	
	public void testVoteLimitOnPub() {

		// Arrange
		int tempPub;
		int PositiveVotesOnPub;
		int NegativeVotesOnPub;
		int result;
		boolean finalResult;
		StringListDto dto = new StringListDto();
		ArrayList<PublicationViewDto> pubListDto= null;
		GetAllPublicationsService service = new GetAllPublicationsService(
				ORGANIZATIONAL_AGENT_USER, INDIVIDUAL_AGENT_USER, dto);
		ArrayList<Publication> pub = null;
		// Act
		try {
			service.execute();
			Transaction.begin();
			pub = service.getPublications();
			pubListDto= service.getAllPublicationsViewDto();

		} catch (AgentUsernameDoesNotExistsException e) {
			fail("Username dont belong to any agent" + e);
		} catch (YouArentAFriendException e) {
			fail("The usernames given dont belong to agents that are friends"
					+ e);
		}
		tempPub = pubListDto.get(0).getId();
		Transaction.commit();
		try {
			addNegativeVote("ze", tempPub);
			addNegativeVote("maria", tempPub);
			addNegativeVote("joao", tempPub);
			addNegativeVote(IA1U, tempPub);
			addNegativeVote(IA2U, tempPub);
			addNegativeVote(IA4U, tempPub);
			addNegativeVote(IA5U, tempPub);

			addPositiveVote(IA3U, tempPub);

		} catch (AgentUsernameDoesNotExistsException e) {
			fail("Agent does not exist:" + e.toString());
		} catch (PublicationIdDoesNotExistsException e) {
			fail("Publication does not exist:" + e.toString());
		}catch (OnVoteLimitException e) {

		}
		Transaction.begin();
		PositiveVotesOnPub =  pubListDto.get(0).getPositive();
		NegativeVotesOnPub =  pubListDto.get(0).getNegative();
		result= PositiveVotesOnPub - NegativeVotesOnPub;

		finalResult =(result <= -5);
		Transaction.commit();

		

		// Assert
		assertTrue("The number of positive votes isn't correct",
				finalResult);

	}
	






}